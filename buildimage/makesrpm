#!/bin/bash

#
# Copyright (C) 2017 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

set -e

function exit_error {
   echo $1 >&2
   exit 1
}

function help {
   echo "Usage: $0 -s input.spec [-c commit]" >&2
   echo '
             -s input.spec         : The input RPM .spec file
             -c commit             : the commit tag for development version build
' >&2
}

while getopts "s:c:" opt; do
    case $opt in
    s)
        specfile=$OPTARG
        [ -z "${specfile}" ] && exit_error "No spec file given"
        ;;
    c)
        commit=$OPTARG
        [ -z "${commit}" ] && exit_error "No commit given"
        ;;
    \?)
        help
        exit_error "Invalid option: -$OPTARG"
        ;;
    esac
done

topdir=$(rpm --eval '%_topdir')

# Cleanup the topdir
find ${topdir} \( -type f -o -type l \) -delete

cp -v ${specfile} ${topdir}/SPECS/${specfile}
specfile=${topdir}/SPECS/${specfile}

source0=$(basename $(spectool -s 0 ${specfile} | cut -f 2 -d ' '))

if [[ -d ".git" ]] && ! [[ ${source0} = http://* || ${source0} = https://* || ${source0} = ftp://* ]]; then
    echo "[INFO] Generate source tarball with git-archive"
    gitrev=$(git rev-parse ${commit:-HEAD})
    prefix=$(basename ${source0} .tar.gz)
    git archive --format=tar --prefix=${prefix}/ ${gitrev} | (
        arcdir=$(mktemp -d)
        cd $arcdir
        tar xf -
        tar -c -z --exclude-vcs --exclude='.gitignore' -f ${topdir}/SOURCES/${source0} ${prefix}
        rm -rf $arcdir
    )
    IFS=- read desc_tag desc_commitn desc_commith <<<$(git describe --tags --match "[0-9]*" --abbrev=7 HEAD 2>/dev/null)
    if [[ -n "${desc_commitn}" ]]; then
        tmplog=$(mktemp)
        echo "[INFO] Write temporary %changelog in ${specfile}"
        git log -n ${desc_commitn} --format="* %cd %aN <%aE> - %h%n- %s%d%n%w(68,2,2)%b%n" --date=local | sed -r 's/[0-9]+:[0-9]+:[0-9]+ //; s/%/%%/' >> ${tmplog}
        sed -i $'/^%changelog/ {\nr '${tmplog}$'\nq\n}' ${specfile}
        rm -f ${tmplog}
    fi
fi

# Fetch (remote) sources
spectool -C ${topdir}/SOURCES -g ${specfile}

# Fetch (local) sources
local_sources=$(spectool -l ${topdir}/SPECS/*.spec | awk '{print $2}')

for f in $local_sources; do
    if [ -f "$f" ]; then
        cp -v "$f" ${topdir}/SOURCES
    fi
done

if [[ -f SHA1SUM ]]; then
    # Check source integrity
    pushd ${topdir}/SOURCES;
    sha1sum -c < $(dirs -l +1)/SHA1SUM
    popd
fi

exec rpmbuild -D "dist ${DIST:-.nsX}" -bs ${topdir}/SPECS/*.spec
